{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = \"http://localhost:8080/utente\";\nexport class UtenteService {\n  constructor(http) {\n    this.http = http;\n    this.isUserLoggedIn = new BehaviorSubject(false);\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        \"Access-Control-Allow-Origin\": \"*\"\n      })\n    };\n  }\n  login(email, password) {\n    return this.http.post(baseUrl + '/login', {\n      \"email\": email,\n      \"password\": password\n    }, this.httpOptions);\n  }\n  setNome(nome) {\n    sessionStorage.setItem(\"nome\", nome);\n  }\n  getNome() {\n    return sessionStorage.getItem(\"nome\");\n  }\n  setLoggato() {\n    sessionStorage.setItem(\"login\", \"true\");\n  }\n  setId(id) {\n    sessionStorage.setItem(\"id\", id + \"\");\n  }\n  getId() {\n    return sessionStorage.getItem(\"id\");\n  }\n  setLogout() {\n    sessionStorage.setItem(\"nome\", \"\");\n    sessionStorage.setItem(\"login\", \"false\");\n    sessionStorage.setItem(\"id\", \"0\");\n    this.isUserLoggedIn.next(false);\n  }\n  getLoggato() {\n    if (sessionStorage.getItem(\"login\") == \"true\") {\n      return true;\n    }\n    return false;\n  }\n  signUp(dati) {\n    return this.http.post(baseUrl + '/addUtente', dati, this.httpOptions);\n  }\n  static #_ = this.ɵfac = function UtenteService_Factory(t) {\n    return new (t || UtenteService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UtenteService,\n    factory: UtenteService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,eAAe,QAAoB,MAAM;;;AAGlD,MAAMC,OAAO,GAAQ,8BAA8B;AAOnD,OAAM,MAAOC,aAAa;EAYxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAVjB,mBAAc,GAA6B,IAAIJ,eAAe,CAAU,KAAK,CAAC;IAGrF,gBAAW,GAAG;MACZK,OAAO,EAAE,IAAIN,WAAW,CAAC;QACvB,cAAc,EAAG,kBAAkB;QACnC,6BAA6B,EAAE;OAChC;KACF;EAEuC;EAGxCO,KAAK,CAACC,KAAY,EAAEC,QAAe;IACjC,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAMR,OAAO,GAAC,QAAQ,EAAE;MAAC,OAAO,EAACM,KAAK;MAAC,UAAU,EAACC;IAAQ,CAAC,EAAC,IAAI,CAACE,WAAW,CAAC;EACpG;EAEAC,OAAO,CAACC,IAAW;IACjBC,cAAc,CAACC,OAAO,CAAC,MAAM,EAAEF,IAAI,CAAC;EACtC;EACAG,OAAO;IACL,OAAOF,cAAc,CAACG,OAAO,CAAC,MAAM,CAAC;EACvC;EAGAC,UAAU;IACRJ,cAAc,CAACC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;EACzC;EAEAI,KAAK,CAACC,EAAS;IACXN,cAAc,CAACC,OAAO,CAAC,IAAI,EAAEK,EAAE,GAAC,EAAE,CAAC;EACvC;EAEAC,KAAK;IACD,OAAOP,cAAc,CAACG,OAAO,CAAC,IAAI,CAAC;EACvC;EAEAK,SAAS;IACLR,cAAc,CAACC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;IAClCD,cAAc,CAACC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;IACxCD,cAAc,CAACC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;IACjC,IAAI,CAACQ,cAAc,CAACC,IAAI,CAAC,KAAK,CAAC;EACnC;EAEAC,UAAU;IACN,IAAGX,cAAc,CAACG,OAAO,CAAC,OAAO,CAAC,IAAE,MAAM,EAAC;MACvC,OAAO,IAAI;;IAEf,OAAO,KAAK;EAChB;EAEAS,MAAM,CAACC,IAAQ;IACb,OAAO,IAAI,CAACtB,IAAI,CAACK,IAAI,CAAMR,OAAO,GAAC,YAAY,EAAEyB,IAAI,EAAC,IAAI,CAAChB,WAAW,CAAC;EACzE;EAAC;qBAvDUR,aAAa;EAAA;EAAA;WAAbA,aAAa;IAAAyB,SAAbzB,aAAa;IAAA0B,YAFZ;EAAM","names":["HttpHeaders","BehaviorSubject","baseUrl","UtenteService","constructor","http","headers","login","email","password","post","httpOptions","setNome","nome","sessionStorage","setItem","getNome","getItem","setLoggato","setId","id","getId","setLogout","isUserLoggedIn","next","getLoggato","signUp","dati","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\daniele.beribe\\src\\algoDemo2VitaB\\algoDemo\\algoDemoFrontend\\src\\app\\service\\utente.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n\r\nconst baseUrl:string=\"http://localhost:8080/utente\"\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UtenteService {\r\n\r\n  public isUserLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type':  'application/json',\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    } ), \r\n  };\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  login(email:string, password:string):Observable<any> {   \r\n    return this.http.post<any>(baseUrl+'/login', {\"email\":email,\"password\":password},this.httpOptions);\r\n  }\r\n\r\n  setNome(nome:string):void{\r\n    sessionStorage.setItem(\"nome\", nome);\r\n  }\r\n  getNome(){\r\n    return sessionStorage.getItem(\"nome\");\r\n  }\r\n\r\n\r\n  setLoggato(){\r\n    sessionStorage.setItem(\"login\", \"true\");\r\n  }\r\n\r\n  setId(id:number){\r\n      sessionStorage.setItem(\"id\", id+\"\");\r\n  }\r\n\r\n  getId(){\r\n      return sessionStorage.getItem(\"id\");\r\n  }\r\n\r\n  setLogout(){\r\n      sessionStorage.setItem(\"nome\", \"\");\r\n      sessionStorage.setItem(\"login\", \"false\");\r\n      sessionStorage.setItem(\"id\", \"0\");\r\n      this.isUserLoggedIn.next(false);\r\n  }\r\n\r\n  getLoggato():boolean{\r\n      if(sessionStorage.getItem(\"login\")==\"true\"){\r\n          return true;\r\n      }\r\n      return false;\r\n  }\r\n\r\n  signUp(dati:any){\r\n    return this.http.post<any>(baseUrl+'/addUtente', dati,this.httpOptions);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}